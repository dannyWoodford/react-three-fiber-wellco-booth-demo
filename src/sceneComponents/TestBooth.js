/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { draco } from 'drei'

export default function TestBooth(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/3d/test/basic.gltf', draco('/draco-gltf/'))

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      'Sphere - animatedAction.002': mixer.clipAction(animations[0], group.current),
      'Armature|mixamo.com|Layer0': mixer.clipAction(animations[1], group.current),
    }
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [])

  console.log(nodes)

  return (
    <group ref={group} {...props} dispose={null}>
      {/* <primitive object={nodes.Light} /> */}
      <group position={[21.95, 17.05, -3.67]} rotation={[Math.PI / 2, -1.01, 0]} scale={[0.04, 0.04, 0.04]}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh material={materials.Bodymat} geometry={nodes.Body.geometry} skeleton={nodes.Body.skeleton} />
        <skinnedMesh
          material={materials.Bodymat}
          geometry={nodes['default'].geometry}
          skeleton={nodes['default'].skeleton}
        />
        <skinnedMesh material={materials.Bodymat} geometry={nodes.Eyes.geometry} skeleton={nodes.Eyes.skeleton} />
        <skinnedMesh
          material={materials.Bottommat}
          geometry={nodes.Bottoms.geometry}
          skeleton={nodes.Bottoms.skeleton}
        />
        <skinnedMesh material={materials.Shoesmat} geometry={nodes.Shoes.geometry} skeleton={nodes.Shoes.skeleton} />
        <skinnedMesh material={materials.Topmat} geometry={nodes.Tops.geometry} skeleton={nodes.Tops.skeleton} />
      </group>
      {/* <primitive object={nodes.Point} /> */}
      <primitive object={nodes.Main} />
      <primitive object={nodes.Camera_6} />
      <primitive object={nodes.Camera_1} />
      <mesh
        material={nodes['Sphere_-_animated'].material}
        geometry={nodes['Sphere_-_animated'].geometry}
        position={[6.46, 2.05, 1.21]}
      />
      <mesh material={materials.Material} geometry={nodes.Booth_Sphere.geometry} scale={[29.3, 29.3, 29.3]} />
    </group>
  )
}
